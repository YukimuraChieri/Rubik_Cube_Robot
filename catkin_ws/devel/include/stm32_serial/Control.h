// Generated by gencpp from file stm32_serial/Control.msg
// DO NOT EDIT!


#ifndef STM32_SERIAL_MESSAGE_CONTROL_H
#define STM32_SERIAL_MESSAGE_CONTROL_H

#include <ros/service_traits.h>


#include <stm32_serial/ControlRequest.h>
#include <stm32_serial/ControlResponse.h>


namespace stm32_serial
{

struct Control
{

typedef ControlRequest Request;
typedef ControlResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Control
} // namespace stm32_serial


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::stm32_serial::Control > {
  static const char* value()
  {
    return "f1c376525e7fd3f183aa1122ff9108b1";
  }

  static const char* value(const ::stm32_serial::Control&) { return value(); }
};

template<>
struct DataType< ::stm32_serial::Control > {
  static const char* value()
  {
    return "stm32_serial/Control";
  }

  static const char* value(const ::stm32_serial::Control&) { return value(); }
};


// service_traits::MD5Sum< ::stm32_serial::ControlRequest> should match
// service_traits::MD5Sum< ::stm32_serial::Control >
template<>
struct MD5Sum< ::stm32_serial::ControlRequest>
{
  static const char* value()
  {
    return MD5Sum< ::stm32_serial::Control >::value();
  }
  static const char* value(const ::stm32_serial::ControlRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::stm32_serial::ControlRequest> should match
// service_traits::DataType< ::stm32_serial::Control >
template<>
struct DataType< ::stm32_serial::ControlRequest>
{
  static const char* value()
  {
    return DataType< ::stm32_serial::Control >::value();
  }
  static const char* value(const ::stm32_serial::ControlRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::stm32_serial::ControlResponse> should match
// service_traits::MD5Sum< ::stm32_serial::Control >
template<>
struct MD5Sum< ::stm32_serial::ControlResponse>
{
  static const char* value()
  {
    return MD5Sum< ::stm32_serial::Control >::value();
  }
  static const char* value(const ::stm32_serial::ControlResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::stm32_serial::ControlResponse> should match
// service_traits::DataType< ::stm32_serial::Control >
template<>
struct DataType< ::stm32_serial::ControlResponse>
{
  static const char* value()
  {
    return DataType< ::stm32_serial::Control >::value();
  }
  static const char* value(const ::stm32_serial::ControlResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // STM32_SERIAL_MESSAGE_CONTROL_H
